; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[common]
# using the latest stable version
#lib_deps = ESP Async WebServer
# or using GIT Url (the latest development version)
lib_deps =
  ArduinoJson@5.13.4
;  AccelStepper
  file://C:/Users/florian.xhumari/Documents/IoT/AccelStepper/AccelStepper
;  ESPAsyncTcp
  AsyncTCP
;  https://github.com/me-no-dev/ESPAsyncWebServer.git
  ESP Async WebServer
  file://C:/Users/florian.xhumari/Documents/IoT/LM75A/M2M_LM75A
  FastLED
;  TaskScheduler
  file://C:/Users/florian.xhumari/Documents/IoT/TaskScheduler/TaskScheduler
  AutoConnect
  PageBuilder
  Adafruit FONA Library@>=1.3.8

lib_ignore =

board_build.f_cpu = 240000000L
;board_build.f_flash = 80000000L
board_build.f_flash = 40000000L
;board_build.partitions =
upload_speed = 921600
monitor_speed = 115200
build_flags =
  -DLOG_LOCAL_LEVEL=ESP_LOG_DEBUG
  -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_DEBUG
  -D_TASK_STD_FUNCTION=1
  -D_TASK_INLINE=1
  -D_TASK_MICRO_RES=1
  -D_TASK_TIMECRITICAL
  -I duktape-2.3.0/src
;  -DCONFIG_SUPPORT_STATIC_ALLOCATION=1
;  -DconfigGENERATE_RUN_TIME_STATS=1
;  -DconfigUSE_STATS_FORMATTING_FUNCTIONS=1
build_unflags =

[env]
; Stack trace decoding:
; $HOME/.platformio/packages/toolchain-xtensa32/bin/xtensa-esp32-elf-addr2line.exe -fp -e .pio/build/esp32dev/firmware.elf
platform = espressif32
;platform = https://github.com/platformio/platform-espressif32.git#feature/stage

board = esp32dev
framework = arduino
board_build.partitions = partitions.csv

build_flags = ${common.build_flags} -DDEBUG=1
;build_flags = ${common.build_flags} -O2 ;-Wl,-Map,output.map
;build_unflags = -g
lib_deps = ${common.lib_deps}
lib_ignore = ${common.lib_ignore}

board_build.f_cpu = ${common.board_build.f_cpu}
board_build.f_flash = ${common.board_build.f_flash}
;board_build.partitions =
upload_speed = ${common.upload_speed}
;upload_port = COM3
;monitor_port = COM3
monitor_speed = ${common.monitor_speed}
; so that the monitor does not reset the esp32 on quitting...
;monitor_rts = 0
;monitor_dtr = 1
monitor_filters = esp32_exception_decoder

[env:esp32dev]

;JTAG connector 10 pins -> GPIO
;[1]VCC  [2]TMS -> MTMS GP14
;[2]GND  [4]TCK -> MTCK GP13
;[3]GND  [6]TDO -> MTDO GP15
;[3]GND  [8]TDI -> MTDI GP12
;[3]GND  [10]NC

build_type = debug
debug_tool = esp-prog
debug_init_break = tbreak setup
;debug_build_flags = -O0 -ggdb3 -g3
